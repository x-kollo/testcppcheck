# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: Git clone project
        uses: actions/checkout@v2
      - name: runaa
        run: |
          ls
      - name: Build test Docker image
        id: build-docker
        run: |
          IMAGE=$(echo ${{ github.repository }} | tr '[:upper:]' '[:lower:]'):test
          docker build . --file Dockerfile --tag $IMAGE
          echo "::set-env name=DOCKER_IMAGE::${IMAGE}"
      - name: Run all input tests
        run: |
          for f in input-tests/*.sh ; do
            docker run -t $DOCKER_IMAGE --entrypoint "/bin/sh" -c input-tests/${f}
          done
          docker container prune
      - name: cppcheck
        uses: Bedzior/cppcheck-action@master
        with:
          enabled checks: all
          enable inconclusive: true
          generate report: true
          report name: cppcheck_report.html
      - name: Testing GitHub Action in action
        uses: actions/checkout@v1
      - name: No project or path test
        uses: ./
      - name: Test shouldn't succeed
        if: success()
        run: exit 1
      - name: Test should fail
        if: failure()
        run: |
          echo Expected failure
          exit 0